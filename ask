#!/usr/bin/python

# ask
# 11-411 NLP Spring 2013, Group 6
# (Stub) Authored by Ryhan Hassan | rhassan@andrew.cmu.edu

# Useful tools which should be pre-installed
import os, sys, errno
import re
import itertools
import nltk

# Import our modules from /modules
sys.path.append("modules")
import questionContentSelector

# Returns string containing content at file path.
def read_file(path):
  content = ""
  inputfile = open(path)
  for line in inputfile: content += str(line)
  inputfile.close()
  return content

# Main
path_to_article = sys.argv[1]
num_questions = int(sys.argv[2])
print("Generating " + str(num_questions) + " questions.")

# Pre-process article content.
article_content = read_file(path_to_article)

# Should probably apply co-reference resolution to article content here.

# Decide how many candidates we want to generate
num_cand = num_questions*10

# Fetch sentence candidates that can be converted into questions.
selected_content = questionContentSelector.process(article_content, num_cand)
print(selected_content)

# Use POS Tagging and Transformation rules to generate questions

# Rank generated questions and return top [:num_questions]

